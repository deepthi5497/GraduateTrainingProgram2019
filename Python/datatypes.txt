"""Write a Python program to get a single string from two given strings, separated by a space and swap the first two characters of each string."""
string1=input("enter string:")
string2=input("enter another:")
res=string1[:2]+string2[2:]
print(res)
res1=string2[:2]+string1[2:]
print(res1)
print(res+" "+res1)
"""Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string is already ends with 'ing' then add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged"""
string1=input("enter string: ")
if len(string1)>=3:
  if string1[-3:]!="ing":
    print(string1+"ing")
  elif string1[-3:]=="ing":
    print(string1+"ly")
else:
  print(string1)
"""14. Write a Python program to find the first appearance of the substring 'not' and 'poor' from a given string, if 'bad' follows the 'poor', replace the whole 'not'...'poor' substring with 'good'. Return the resulting string"""
string1=input("enter string")
a=string1.find("not")
b=string1.find("poor")
print(b) 
print(string1.replace(string1[a:b+4],"good"))
""" Write a Python function that takes a list of words and returns the length of the longest one"""
list1=["ab","cd","abcd","acd"]
list2=[]
for word in list1:
  list2.append((len(word),word))
  list2.sort()
print(list2)
a=list2[-1:]
print(a)
"""Write a Python program to test whether an input is an integer"""
try:
  string1=int(input("enter integer"))
  if type(string1)==int:
    print("integer")
except:
    print("not")
"""Write a Python program to sort (ascending and descending) a dictionary by value"""
dict1={1:"abc",2:"acd",6:"hggu",3:"zfr"}
for val in sorted(dict1.values(),reverse=True):
  print(val,end=" ")
list1=[1,2,3,9,8,5,0]
a=sorted(list1,reverse=True)
print(a)
d = {0:10, 1:20}  
print(d)  
d.update({2:30})  
print(d)  
"""Write a Python program to concatenate following dictionaries to create a new one"""
dic1={1:10, 2:20}
dic2={3:30, 4:40}
dic3={5:50,6:60}
dict4={}
dict4.update(dic1)
print(dict4)
dict4.update(dic2)
print(dict4)
dict4.update(dic3)
print(dict4)
d = {'x': 10, 'y': 20, 'z': 30}   
for dict_key, dict_value in d.items():  
    print(dict_key,'->',dict_value) 
str1="abcd"  
print(str1[-1:] + str1[1:-1] + str1[:1])  
"""28. Write a Python program to remove the characters which have odd index values of a given string"""
string1=input("enter")
a=string1.strip(string1[-1:])
a=string1.replace(string1[-1:],"")
print(a)
"""28. Write a Python program to remove the characters which have odd index values of a given string."""
string1=input()
result = ""   
for i in range(len(string1)):  
    if i % 2 == 0:  
      result = result + string1[i]  
print(result)
"""Write a Python program to count the occurrences of each word in a given sentence"""
string1=input("enter:  ").split(" ")
count=dict()
for word in string1:
  if word  in count:
    count[word]=count[word]+1
  else:
    count[word]=1
print(count)
"""1. Write a Python function that takes two lists and returns True if they have at least one common member."""
list1=[1,2,3,4,5]
list2  =[5,6,7,8,9]
for x in list1:  
  for y in list2:  
    if x == y:  
      print("present")
    else:
      print("not")


string1=input("enter")
a=string1.upper()
b=string1.lower()
print(a,b)
"""14. Write a Python program that accepts a comma separated sequence of words as input and prints the unique words in sorted form (alphanumerically)."""
string1=input("enter:").split(",")
a=list(set(string1))
a.sort()
print(a)
"""17. Write a Python function to get a string made of 4 copies of the last two characters of a specified string (length must be at least 2)"""
string1=input("enter")
res=string1[-2:]
print(res*4)
""". Write a Python function to convert a given string to all uppercase if it contains at least 2 uppercase characters in the first 4 characters."""
string1=input("enter string:")
count=0
for i in string1[:4]:
  if i.isupper():
    count=count+1
# print(count)
if count>=2:
  res=string1.upper()
  print(res)
else:
  print(string1)

 

 
